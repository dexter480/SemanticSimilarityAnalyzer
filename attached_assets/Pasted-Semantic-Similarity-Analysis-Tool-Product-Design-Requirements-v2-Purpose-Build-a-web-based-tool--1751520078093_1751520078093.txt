Semantic Similarity Analysis Tool - Product Design Requirements (v2)
Purpose
Build a web-based tool that measures semantic similarity between keywords and text content using OpenAI's text-embedding-3 model, enabling users to optimize their copy for better Google ranking by comparing against competitor content.
Core Functionality
1. Input Requirements

OpenAI API Key Field (required)

Secure text input with masking
Validation to ensure proper format (starts with 'sk-')
Store only in session memory, never persist


Keywords Input (required)

Large text area accepting comma or newline separated keywords
Support for weighted format: "keyword:weight" (e.g., "SEO:3, content marketing:2")
Default weight of 1.0 if not specified
Minimum 1 keyword, maximum 50 keywords
Display parsed keywords with their weights
Example formats shown to user:

Simple: SEO, content marketing, digital strategy
Weighted: SEO:3, content marketing:2, digital strategy:1




Main Copy Text (required)

Text area supporting up to 4,000 words
Character/word counter displayed
Clear error if limit exceeded


Competitor Copy Text (required)

Same specifications as main copy text


Analysis Mode Toggle

Full Document Analysis (default)
Chunked Analysis (advanced)



2. Processing Logic
2.1 Embedding Generation

Use OpenAI's text-embedding-3-small model (1536 dimensions)
Generate individual embeddings for each keyword
For full document mode: Generate single embedding for entire texts
For chunked mode: Generate embeddings for each chunk

2.2 Weighted Centroid Calculation
weighted_centroid = Σ(keyword_embedding_i * weight_i) / Σ(weight_i)
normalize(weighted_centroid)
2.3 Chunking Logic (when enabled)

Split text into ~500-word chunks with 100-word overlap
Maintain chunk boundaries at sentence ends when possible
Generate embedding for each chunk
Calculate similarity for each chunk against keyword centroid
Overall score = average of all chunk similarities

2.4 Similarity Calculation

Calculate cosine similarity between keyword centroid and text embeddings
Express as percentage (0-100%)
For chunked mode: Calculate both per-chunk and overall scores

3. Output Display
3.1 Summary Results

Main Copy Overall Score: X.X%
Competitor Copy Overall Score: X.X%
Winner Indicator: Visual highlight of higher-scoring content
Gap Analysis: "Your copy is X.X% [more/less] aligned with target keywords"

3.2 Chunk-Level Analysis (when chunked mode selected)
Main Copy Breakdown:
├─ Chunk 1 (Introduction): 72%
├─ Chunk 2 (Basic SEO): 85%
├─ Chunk 3 (Technical SEO): 78%
├─ Chunk 4 (Content Strategy): 45% ⚠️
├─ Chunk 5 (Link Building): 52%
└─ Chunk 6 (Conclusion): 68%

Competitor Copy Breakdown:
[Similar breakdown]
3.3 Visual Components

Side-by-side bar chart for overall scores
Heat map visualization for chunk-level scores
Keyword weight distribution display

3.4 Actionable Insights

Identify weak sections: "Chunks 4 and 5 are significantly below average"
Optimization suggestions: "Increase keyword density in 'Content Strategy' section"
Keyword coverage gaps based on weighted importance

4. Advanced Features
4.1 Keyword Analysis

Show which keywords are most represented in each text
Display keyword weight impact on final scores

4.2 Export Options

CSV export with all scores and chunk breakdowns
PDF report with visualizations and recommendations

5. Technical Implementation
5.1 API Efficiency

Batch API calls where possible
Cache embeddings during session
Cost estimate: ~$0.0002 per complete analysis

5.2 Error Handling

API key validation
Rate limit handling with exponential backoff
Graceful degradation for API failures
Clear user messaging for all error states

5.3 Performance

Chunking operations performed client-side
Progress indicator for long processing
Maximum processing time: 30 seconds

6. UI/UX Requirements

Single-page responsive design
Clear mode toggle between simple/advanced analysis
Inline help tooltips for weighted keywords
Visual feedback during processing
One-click reset functionality

7. Security & Privacy

No server-side storage of keys or content
All processing in browser memory
Clear privacy notice about OpenAI API usage
Session data cleared on page refresh